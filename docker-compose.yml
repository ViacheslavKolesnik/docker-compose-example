version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 15672:15672
    volumes:
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
      - ./volumes/rabbitmq/log/:/var/log/rabbitmq
    env_file:
      - ./env/rabbitmq.env
    networks:
      compose_example_network:
        ipv4_address: 10.1.0.5
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:13-alpine
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./env/postgres.env
    networks:
      compose_example_network:
        ipv4_address: 10.1.0.6
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ce-user -d ce_database"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:6.2.1-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./volumes/redis-data:/data
    networks:
      compose_example_network:
        ipv4_address: 10.1.0.7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  sender:
    build: sender/.
    env_file:
      - ./env/apps.env
      - ./env/sender.env
    depends_on:
      - rabbitmq
    networks:
      compose_example_network:
        ipv4_address: 10.1.0.10
  receiver:
    build: receiver/.
    env_file:
      - ./env/apps.env
      - ./env/receiver.env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      compose_example_network:
        ipv4_address: 10.1.0.11

networks:
  compose_example_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/24